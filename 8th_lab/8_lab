#include <iostream>
#include <fstream>
#include <string>

const int N_Max = 2000;

bool Read(int& n, int& cnt, std::string words[N_Max])
{
    std::ifstream in("text.txt");

    //shield
    if(!in.is_open())
    {
        std::cerr << "//file error" << std::endl; // std::cerr <<
        return false;
    }
    //shield

    in >> n;
    cnt = 0;

    while(!in.eof())
    {
        in >> words[cnt];
        cnt++;
        //std::cout << "<" << s << ">" << std::endl;
    }
    return true;
}

void Write(int n, int cnt, std::string words[N_Max])
{
    for(int i=0;i<cnt;i++)
        std::cout << words[i] << std::endl;
}

void ClearWords(int cnt, std::string words[N_Max])
{
    for(int i=0;i<cnt;i++)
        for(int j=0;j<words[i].length();j++)
        {
            if(isalpha(words[i][j]))
                words[i].erase(j, 1);
                j--;
        }
}

void CountEqualLetters(int cnt, std::string words[N_Max], int countLetters[N_Max])
{
    for(int i=0;i<cnt;i++)
    {
        char letters[256] = {0};
        for(int j=0;j<words[i].length();j++)
            letters[words[i][j]]++;
        
        int max = INT_MIN;
        for(int k=0;k<256;k++)
            if(letters[k] > max)
                max = letters[k];
            countLetters[i] = max;
    }
}

int main()
{    
    int n;
    int cnt = 0;
    std::string words[N_Max];
    if(!Read(n, cnt, words))
        return -1;

    ClearWords(cnt, words);
    int countLetters[N_Max] = {0};
    CountEqualLetters(cnt, words, countLetters);
    Write(n, cnt, words);
    
    return 0;
}
